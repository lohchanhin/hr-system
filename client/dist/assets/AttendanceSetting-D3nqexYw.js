import{a as k}from"./api-DiKkRxLO.js";import{_ as q,r as b,j as z,c as K,b as E,d as l,w as a,e as r,o as Q,g as f,E as V}from"./index-DTgl98wj.js";const W={class:"attendance-setting"},X={slot:"footer",class:"dialog-footer"},T="HH:mm",Y={__name:"AttendanceSetting",setup(Z){const U=b("shift"),h={lateGrace:5,earlyLeaveGrace:5,missingThreshold:30,autoNotify:!0},x={enableBreakPunch:!0,breakInterval:60,outingNeedApprove:!1},S={weekdayThreshold:30,holidayRate:2,toCompRate:1.5},p=b([]),y=b(!1),s=b({name:"",startTime:"",endTime:"",breakTime:""});let c=null;const i=b({...h}),d=b({...x}),m=b({...S});function N(t){!t||typeof t!="object"||(Array.isArray(t.shifts)&&(p.value=t.shifts),t.abnormalRules&&(i.value={...h,...t.abnormalRules}),t.breakOutRules&&(d.value={...x,...t.breakOutRules}),t.overtimeRules&&(m.value={...S,...t.overtimeRules}))}async function P(){const t=await k("/api/attendance-settings"),e=await t.json().catch(()=>null);if(!t.ok){console.error("讀取出勤設定失敗",(e==null?void 0:e.error)||t.statusText);return}N(e)}async function R(){const t={abnormalRules:{...i.value},breakOutRules:{...d.value},overtimeRules:{...m.value}},e=await k("/api/attendance-settings",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await e.json().catch(()=>null);if(!e.ok)throw new Error((n==null?void 0:n.error)||"儲存設定時發生錯誤");return N(n),n}const O=(t=null)=>{t!==null?(c=t,s.value={...p.value[t]}):(c=null,s.value={name:"",startTime:"",endTime:"",breakTime:""}),y.value=!0},F=async()=>{if(c===null){const t=await k("/api/shifts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s.value)});if(t.ok){const e=await t.json();p.value.push(e)}}else{const t=p.value[c]._id,e=await k(`/api/shifts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(s.value)});if(e.ok){const n=await e.json();p.value[c]=n}}y.value=!1},G=async t=>{const e=p.value[t]._id;(await k(`/api/shifts/${e}`,{method:"DELETE"})).ok&&p.value.splice(t,1)},I=async()=>{try{await R(),V.success("已儲存「異常判定規則」設定")}catch(t){V.error(t.message||"儲存失敗")}},L=async()=>{try{await R(),V.success("已儲存「分段打卡/外出」設定")}catch(t){V.error(t.message||"儲存失敗")}},$=async()=>{try{await R(),V.success("已儲存「加班規則」設定")}catch(t){V.error(t.message||"儲存失敗")}};return z(()=>{P()}),(t,e)=>{const n=r("el-button"),_=r("el-table-column"),D=r("el-table"),j=r("el-input"),u=r("el-form-item"),A=r("el-time-picker"),w=r("el-form"),J=r("el-dialog"),g=r("el-tab-pane"),v=r("el-input-number"),C=r("el-switch"),H=r("el-tabs");return Q(),K("div",W,[e[26]||(e[26]=E("h2",null,"出勤設定",-1)),l(H,{modelValue:U.value,"onUpdate:modelValue":e[17]||(e[17]=o=>U.value=o),type:"card"},{default:a(()=>[l(g,{label:"班別設定",name:"shift"},{default:a(()=>[l(n,{type:"primary",onClick:e[0]||(e[0]=o=>O())},{default:a(()=>e[18]||(e[18]=[f("新增班別")])),_:1}),l(D,{data:p.value,style:{"margin-top":"20px",width:"100%"}},{default:a(()=>[l(_,{prop:"name",label:"班別名稱",width:"180"}),l(_,{prop:"startTime",label:"上班時間",width:"120"}),l(_,{prop:"endTime",label:"下班時間",width:"120"}),l(_,{prop:"breakTime",label:"休息時段"}),l(_,{label:"操作",width:"180"},{default:a(({row:o,$index:B})=>[l(n,{type:"primary",onClick:M=>O(B)},{default:a(()=>e[19]||(e[19]=[f("編輯")])),_:2},1032,["onClick"]),l(n,{type:"danger",onClick:M=>G(B)},{default:a(()=>e[20]||(e[20]=[f("刪除")])),_:2},1032,["onClick"])]),_:1})]),_:1},8,["data"]),l(J,{title:"班別資料",modelValue:y.value,"onUpdate:modelValue":e[6]||(e[6]=o=>y.value=o),width:"500px"},{default:a(()=>[l(w,{model:s.value,"label-width":"100px"},{default:a(()=>[l(u,{label:"名稱"},{default:a(()=>[l(j,{modelValue:s.value.name,"onUpdate:modelValue":e[1]||(e[1]=o=>s.value.name=o),placeholder:"例如：早班 / 晚班"},null,8,["modelValue"])]),_:1}),l(u,{label:"上班時間"},{default:a(()=>[l(A,{modelValue:s.value.startTime,"onUpdate:modelValue":e[2]||(e[2]=o=>s.value.startTime=o),placeholder:"選擇上班時間",format:T,"value-format":T},null,8,["modelValue"])]),_:1}),l(u,{label:"下班時間"},{default:a(()=>[l(A,{modelValue:s.value.endTime,"onUpdate:modelValue":e[3]||(e[3]=o=>s.value.endTime=o),placeholder:"選擇下班時間",format:T,"value-format":T},null,8,["modelValue"])]),_:1}),l(u,{label:"休息時段"},{default:a(()=>[l(j,{modelValue:s.value.breakTime,"onUpdate:modelValue":e[4]||(e[4]=o=>s.value.breakTime=o),placeholder:"例如：12:00~13:00"},null,8,["modelValue"])]),_:1})]),_:1},8,["model"]),E("span",X,[l(n,{onClick:e[5]||(e[5]=o=>y.value=!1)},{default:a(()=>e[21]||(e[21]=[f("取消")])),_:1}),l(n,{type:"primary",onClick:F},{default:a(()=>e[22]||(e[22]=[f("儲存")])),_:1})])]),_:1},8,["modelValue"])]),_:1}),l(g,{label:"異常判定規則",name:"abnormal"},{default:a(()=>[l(w,{model:i.value,"label-width":"140px",class:"rule-form"},{default:a(()=>[l(u,{label:"遲到容許誤差(分鐘)"},{default:a(()=>[l(v,{modelValue:i.value.lateGrace,"onUpdate:modelValue":e[7]||(e[7]=o=>i.value.lateGrace=o),min:0},null,8,["modelValue"])]),_:1}),l(u,{label:"早退容許誤差(分鐘)"},{default:a(()=>[l(v,{modelValue:i.value.earlyLeaveGrace,"onUpdate:modelValue":e[8]||(e[8]=o=>i.value.earlyLeaveGrace=o),min:0},null,8,["modelValue"])]),_:1}),l(u,{label:"缺卡判斷時間(分鐘)"},{default:a(()=>[l(v,{modelValue:i.value.missingThreshold,"onUpdate:modelValue":e[9]||(e[9]=o=>i.value.missingThreshold=o),min:0},null,8,["modelValue"])]),_:1}),l(u,{label:"未打卡自動通知"},{default:a(()=>[l(C,{modelValue:i.value.autoNotify,"onUpdate:modelValue":e[10]||(e[10]=o=>i.value.autoNotify=o),"active-text":"啟用","inactive-text":"停用"},null,8,["modelValue"])]),_:1}),l(u,null,{default:a(()=>[l(n,{type:"primary",onClick:I},{default:a(()=>e[23]||(e[23]=[f("儲存規則")])),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),l(g,{label:"分段打卡/外出",name:"break-outing"},{default:a(()=>[l(w,{model:d.value,"label-width":"140px",class:"rule-form"},{default:a(()=>[l(u,{label:"是否允許分段打卡"},{default:a(()=>[l(C,{modelValue:d.value.enableBreakPunch,"onUpdate:modelValue":e[11]||(e[11]=o=>d.value.enableBreakPunch=o),"active-text":"是","inactive-text":"否"},null,8,["modelValue"])]),_:1}),l(u,{label:"分段打卡最少間隔(分鐘)"},{default:a(()=>[l(v,{modelValue:d.value.breakInterval,"onUpdate:modelValue":e[12]||(e[12]=o=>d.value.breakInterval=o),min:0,disabled:!d.value.enableBreakPunch},null,8,["modelValue","disabled"])]),_:1}),l(u,{label:"外出登記需審核"},{default:a(()=>[l(C,{modelValue:d.value.outingNeedApprove,"onUpdate:modelValue":e[13]||(e[13]=o=>d.value.outingNeedApprove=o),"active-text":"需要","inactive-text":"不需要"},null,8,["modelValue"])]),_:1}),l(u,null,{default:a(()=>[l(n,{type:"primary",onClick:L},{default:a(()=>e[24]||(e[24]=[f("儲存設定")])),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),l(g,{label:"加班規則",name:"overtime"},{default:a(()=>[l(w,{model:m.value,"label-width":"120px",class:"rule-form"},{default:a(()=>[l(u,{label:"平日加班起算(分)"},{default:a(()=>[l(v,{modelValue:m.value.weekdayThreshold,"onUpdate:modelValue":e[14]||(e[14]=o=>m.value.weekdayThreshold=o),min:0},null,8,["modelValue"])]),_:1}),l(u,{label:"假日加班倍數"},{default:a(()=>[l(v,{modelValue:m.value.holidayRate,"onUpdate:modelValue":e[15]||(e[15]=o=>m.value.holidayRate=o),min:1,step:.1},null,8,["modelValue"])]),_:1}),l(u,{label:"轉補休折算比率"},{default:a(()=>[l(v,{modelValue:m.value.toCompRate,"onUpdate:modelValue":e[16]||(e[16]=o=>m.value.toCompRate=o),min:1,step:.1},null,8,["modelValue"])]),_:1}),l(u,null,{default:a(()=>[l(n,{type:"primary",onClick:$},{default:a(()=>e[25]||(e[25]=[f("儲存加班規則")])),_:1})]),_:1})]),_:1},8,["model"])]),_:1})]),_:1},8,["modelValue"])])}}},ae=q(Y,[["__scopeId","data-v-037d7240"]]);export{ae as default};
